# Generated by Django 4.2.7 on 2025-10-02 02:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import rentals.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Attractive title for the rental property', max_length=200, verbose_name='title')),
                ('description', models.TextField(help_text='Detailed description of the property', verbose_name='description')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('condo', 'Condo'), ('townhouse', 'Townhouse'), ('studio', 'Studio'), ('room', 'Single Room'), ('other', 'Other')], default='apartment', max_length=20, verbose_name='property type')),
                ('price', models.DecimalField(decimal_places=2, help_text='Monthly rent amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='monthly rent')),
                ('security_deposit', models.DecimalField(blank=True, decimal_places=2, help_text='Security deposit amount', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='security deposit')),
                ('utilities_included', models.BooleanField(default=False, help_text='Whether utilities (water, electricity, etc.) are included in rent', verbose_name='utilities included')),
                ('address', models.CharField(help_text='Street address of the property', max_length=255, verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state/province')),
                ('zip_code', models.CharField(max_length=20, verbose_name='zip code')),
                ('country', models.CharField(default='United States', max_length=100, verbose_name='country')),
                ('latitude', models.FloatField(blank=True, help_text='GPS latitude coordinate', null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, help_text='GPS longitude coordinate', null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='longitude')),
                ('bedrooms', models.PositiveIntegerField(help_text='Number of bedrooms', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='bedrooms')),
                ('bathrooms', models.PositiveIntegerField(help_text='Number of bathrooms', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='bathrooms')),
                ('square_footage', models.PositiveIntegerField(blank=True, help_text='Total area in square feet', null=True, validators=[django.core.validators.MinValueValidator(100)], verbose_name='square footage')),
                ('furnishing_status', models.CharField(choices=[('furnished', 'Fully Furnished'), ('semi_furnished', 'Semi Furnished'), ('unfurnished', 'Unfurnished')], default='unfurnished', max_length=20, verbose_name='furnishing status')),
                ('parking_available', models.BooleanField(default=False, verbose_name='parking available')),
                ('parking_spots', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='parking spots')),
                ('pets_allowed', models.BooleanField(default=False, verbose_name='pets allowed')),
                ('smoking_allowed', models.BooleanField(default=False, verbose_name='smoking allowed')),
                ('laundry_available', models.BooleanField(default=False, verbose_name='laundry available')),
                ('internet_included', models.BooleanField(default=False, verbose_name='internet included')),
                ('gym_access', models.BooleanField(default=False, verbose_name='gym access')),
                ('pool_access', models.BooleanField(default=False, verbose_name='pool access')),
                ('available_from', models.DateField(help_text='Date when the property becomes available', verbose_name='available from')),
                ('lease_duration_min', models.PositiveIntegerField(default=12, help_text='Minimum lease duration in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)], verbose_name='minimum lease duration (months)')),
                ('lease_duration_max', models.PositiveIntegerField(blank=True, help_text='Maximum lease duration in months (leave blank for no limit)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)], verbose_name='maximum lease duration (months)')),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('pending', 'Pending'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='available', max_length=20, verbose_name='rental status')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this listing should be featured prominently', verbose_name='featured listing')),
                ('contact_phone', models.CharField(blank=True, help_text='Phone number for inquiries', max_length=17, verbose_name='contact phone')),
                ('contact_email', models.EmailField(blank=True, help_text='Email for inquiries (defaults to landlord email)', max_length=254, verbose_name='contact email')),
                ('distance_to_campus', models.FloatField(blank=True, help_text='Distance to main university campus in miles', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='distance to campus (miles)')),
                ('shuttle_service', models.BooleanField(default=False, verbose_name='shuttle service to campus')),
                ('views_count', models.PositiveIntegerField(default=0, help_text='Number of times this listing has been viewed', verbose_name='views count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('landlord', models.ForeignKey(help_text='Property owner/landlord', limit_choices_to={'user_type': 'landlord'}, on_delete=django.db.models.deletion.CASCADE, related_name='rental_properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rental Property',
                'verbose_name_plural': 'Rental Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RentalInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Inquiry message from tenant', verbose_name='message')),
                ('contact_phone', models.CharField(blank=True, max_length=17, verbose_name='contact phone')),
                ('preferred_move_date', models.DateField(blank=True, null=True, verbose_name='preferred move-in date')),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('closed', 'Closed')], default='new', max_length=10, verbose_name='status')),
                ('landlord_reply', models.TextField(blank=True, verbose_name='landlord reply')),
                ('replied_at', models.DateTimeField(blank=True, null=True, verbose_name='replied at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='rentals.rental')),
                ('tenant', models.ForeignKey(limit_choices_to={'user_type': 'tenant'}, on_delete=django.db.models.deletion.CASCADE, related_name='rental_inquiries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rental Inquiry',
                'verbose_name_plural': 'Rental Inquiries',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['rental'], name='rentals_ren_rental__f610a8_idx'), models.Index(fields=['tenant'], name='rentals_ren_tenant__71f5c8_idx'), models.Index(fields=['status'], name='rentals_ren_status_662975_idx'), models.Index(fields=['created_at'], name='rentals_ren_created_cb0d32_idx')],
            },
        ),
        migrations.CreateModel(
            name='RentalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Property image', upload_to=rentals.models.rental_image_upload_path, verbose_name='image')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=200, verbose_name='caption')),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the main image for the property', verbose_name='primary image')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which images should be displayed', verbose_name='display order')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='uploaded at')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='rentals.rental')),
            ],
            options={
                'verbose_name': 'Rental Image',
                'verbose_name_plural': 'Rental Images',
                'ordering': ['order', 'uploaded_at'],
                'indexes': [models.Index(fields=['rental', 'is_primary'], name='rentals_ren_rental__af2708_idx'), models.Index(fields=['rental', 'order'], name='rentals_ren_rental__8d9be6_idx')],
            },
        ),
        migrations.CreateModel(
            name='RentalFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='favorited at')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='rentals.rental')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_rentals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rental Favorite',
                'verbose_name_plural': 'Rental Favorites',
                'indexes': [models.Index(fields=['user'], name='rentals_ren_user_id_b70bdb_idx'), models.Index(fields=['rental'], name='rentals_ren_rental__89557c_idx'), models.Index(fields=['created_at'], name='rentals_ren_created_706800_idx')],
                'unique_together': {('user', 'rental')},
            },
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['status', 'available_from'], name='rentals_ren_status_28e310_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['city', 'state'], name='rentals_ren_city_274698_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['price'], name='rentals_ren_price_f53edf_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['bedrooms', 'bathrooms'], name='rentals_ren_bedroom_4f5fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['property_type'], name='rentals_ren_propert_770a2e_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['landlord'], name='rentals_ren_landlor_25b637_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['is_featured'], name='rentals_ren_is_feat_c4b37e_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['created_at'], name='rentals_ren_created_e28652_idx'),
        ),
    ]
